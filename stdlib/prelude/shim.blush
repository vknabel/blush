module prelude

// Anything is a value of type `Any`.
extern type Any {}
// All types are of type `AnyType`.
extern type AnyType {}

// All annotations are of type `Annotation`.
extern type Annotation {}
// All annotation types are of type `AnnotationType`.
extern type AnnotationType {}

// All modules are of type `Module`.
extern type Module {}
// All module types are of type `ModuleType`.
extern type ModuleType {}

// A finite list of values.
extern type Array {
  // The length of the array.
  @Type(Int) length
}

@Bool
let true = 0 == 0
@Bool
let false = 0 != 0

// Represents boolean values like `True` and `False`.
// Typically used for conditionals and flags.
extern type Bool {
  // Negates a boolean value.
  toggle()
}

// A single character from a string.
extern type Char {}

// An associative array of keys and their values.
extern type Dict {
  // The length of the dictionary.
  @Type(Int) length
}

// A callable function.
extern type Func {
  // The amount of function parameters to be passed.
  @Type(Int) arity
}

// A numeric value, either floating point or integer.
annotation Numeric {
  @Returns(Number)
  get()
}

enum Number {
  // A floating point number.
  @Numeric({ f => f })
  extern Float {}

  // A whole integer number.
  @Numeric({ i => i })
  extern Int {}
}

extern type String {
  @Type(Int) length
}

// Represents the absence of a value.
@Type(Void)
extern let void
// The type of the `void` value.
extern type Void {}
