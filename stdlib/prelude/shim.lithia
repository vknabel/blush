module prelude

// Annotates a declaration to be of a given type.
// Instead of annotating declarations with `@Type(SomeType)`, the shorthand of `@SomeType` can be used.
annotation Type {
  // The type of the annotation.
  @Type(AnyType) type
}

// Anything is a value of type `Any`.
extern Any {}
// All types are of type `AnyType`.
extern AnyType {}

// A finite list of values.
extern Array {
  // The length of the array.
  @Type(Int) length
}

let true = 0 == 0
let false = 0 != 0

// Represents boolean values like `True` and `False`.
// Typically used for conditionals and flags.
extern Bool {
  // Negates a boolean value.
  toggle()
}

// A single character from a string.
extern Char {}

// An associative array of keys and their values.
extern Dict {
  // The length of the dictionary.
  @Type(Int) length
}

// A floating point number.
extern Float {}

// A callable function.
extern Func {
  // The amount of function parameters to be passed.
  @Type(Int) arity
}

// A whole integer number.
extern Int {}
extern Module {}
extern String {
  @Type(Int) length
}

@Type(Void)
extern void
extern Void {}
